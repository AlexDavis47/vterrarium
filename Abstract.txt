Abstract

The VTerrarium (VT) <Always use the full name instead of the abbreviation> is a compact game system designed in the shape of a terrarium, offering an interactive and immersive idle gaming <idle game instead of gaming?> experience. Inspired by virtual fish tanks <use aquarium instead of fish tank> and classic Tamagotchi-style games, the VT enables players to collect digital <refer to as virtual> creatures, earn passive rewards, and influence the environment using real-world interactions.<This whole line sucks a bit, earn passive rewards is a bit vague, the game loop is about making your creatures happy, which earns you money, which you can use to buy more creatures and items for your aquarium. The real world interactions is also vague, it should refer to the sensors, using the temperature and light sensors that change the in-game environment and affect the creatures happiness depending on their preferences> The system features two screens—on the top and front—allowing for an immersive 3D experience, along with sensors that affect the in-game environment. <The two screens is really more to create the illusion of a 3D environment, since it has two different views of the tank, as well as allowing the top screen to be more for UI, like when you feed fish in a real aquarium, and the front for viewing mainly>

At the core of the VT system is a seamless integration of hardware and software <I don't really like this sentence, It should be reworded in some way to say that the most the most unique part of this project is the integration of the hardware and software, but sound less ChatGPTish>, powered by an Arduino Nano for sensor input and a Mini PC running the Godot Engine for rendering and game logic <Refer to it as a Miniature Computer, and the and the computer should be mentioned first as it is the most important hardware component, the Arduino takes our analogue and digital sensor inputs and processes them using our own embedded code which can send directly to the Godot Engine, where we wrote a custom C# extension for the engine to translate the serial bus data into usable global information in the engine, as well as apply more complex processing to the data. But obviously this is just an abstract, don't be too in depth or technical>. The Arduino processes data from sensors, such as a photoresistor and thermometer, allowing the VT to detect light levels and temperature. These factors directly impact creature behavior, influencing their mood and productivity within the game. 

The Godot Engine serves as the software backbone<Should be more like The backbone of our software is the Open Source Godot Game Engine>, processing sensor input and rendering the virtual environment. An autoload system manages key parameters <This is a little bit vague again, and autoloads are not as common of a term in software, should be more like globals, or just remove entirely and mention the features>, such as sensor sensitivity, viewport rendering, and user settings. Creature behavior is controlled through a state machine<It's not controlled by a single state machine, each creature has their own state machines that use the creature's data to make decisions>, governing AI-driven actions and interactions. A built-in mood meter tracks creature happiness, with happier creatures becoming more productive <This is not really accurate, we stated the actual functionality of happiness and everything previously so make it more accurate to that, creatures are not productive, they generate money>. Additional software components support layered rendering <selective viewport rendering> and an interactive UI for an engaging user experience.

The VTerrarium is designed with expandability in mind. Future developments may introduce more sensors, advanced AI-driven ecosystems, and additional gameplay mechanics such as speech recognition, fluid simulation, or deeper environmental simulation. The current iteration prioritizes a complete project by focusing on user interactions rather than a deep ecosystem. <This is mostly fine but feed free to touch up if wanted>

With its unique combination of hardware integration, modular software design, and idle gaming mechanics, the VTerrarium represents an innovative approach to physical-digital interaction. It provides a scalable framework for interactive simulations, virtual pet experiences, and novel gaming concepts within a self-contained environment.
